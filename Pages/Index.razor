@page "/"
@inject IJSRuntime JsRuntime

<PageTitle>Index</PageTitle>

<body>
	<script>
		window.triggerClick = (elt) => elt.click();
	</script>
	<script suppress-error="BL9992" type="module" src="build/build.js"></script>
	<button @ref="refresh" hidden="hidden" @onclick="StateChanged">refresh</button>
	<MainCanvas comps=@(comps)></MainCanvas>
</body>


@code{


	public Index()
	{
		app = this;
	}

	public void StateChanged()
	{
		StateHasChanged();	
	}

	async Task triggerRender()
	{
		await JsRuntime.InvokeAsync<object>("triggerClick", refresh);
	}

	public static Dictionary<int , Dictionary<string, object>> comps = new() {
		{ 0, new() { { "globalId", 31 }, { "mainValue", false }, { "x", 10.0 }, { "y", 70.0 } } },
		{ 1, new() { { "globalId", 31 }, { "mainValue", false }, { "x", 30.0 }, { "y", 100.0 } } }
	};

	public static Index? app;

	public static ElementReference? refresh;

	[JSInvokable]
	public static async void sendVal(int localId, object data)
	{
		Index.comps[localId]["mainValue"] = data;
		await app.triggerRender();
	}

	protected async override Task OnAfterRenderAsync(bool firstRender)
	{
		if (firstRender)
		{
			var module = await JsRuntime.InvokeAsync<IJSObjectReference>("interopManager.getInteropManager");
			await module.InvokeVoidAsync("startCodeLoop", DotNetObjectReference.Create(this));

			
		}
	}

}
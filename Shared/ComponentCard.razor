@inject IJSRuntime JsRuntime

<div class="card-container" @onmouseenter="HandleMouseEnterCardContainer" @onmouseleave="HandleMouseLeaveCardContainer" @onmousedown="handleClick" style="pointer-events:@(Disabled ? "none" : "auto"); background-color:@(Disabled ? "gray" : "white")">
    @if (_showPaletteRightClick) //palette right click
    {
        <div class="palette-right-click-container" style="z-index: 9999; position: absolute; top: 0; left: 0; font-size: 80%" @onmouseenter="ShowPaletteRightClickFunc" @onmouseleave="StartHidingPaletteRightClick">
            <div @onmousedown:stopPropagation style="width: 100%">
                <button id="palette-component-help-button" style="font-size: 100%; width: 100%" @onclick="() => OpenLink(GenerateLink(ComponentDeclarations.Components[GlobalId].name))">
                    <span style="padding-left: 4px; font-size: 85%;">𝗶￨Component Info</span>
                </button>
            </div>
        </div>
    }
    <div class="card-img-container">
        <VaryingComponent disableBorder="true" posAbsolute="false" individualData="new(GlobalId, new(), 0, 0)" objId="@GlobalId" zoomFactor="@(ComponentDeclarations.Components[GlobalId].cardScaleFactor * ADArCWebApp.Pages.Index.CurrentWidthRatio)" DragStart="() => { }" DragProgress="() => { }" DragEnd="() => { }"></VaryingComponent>
    </div>

    <div class="altContainer" @oncontextmenu="ShowPaletteRightClickFunc" @onmouseleave="StartHidingPaletteRightClick" @oncontextmenu:preventDefault="true">
        @ComponentDeclarations.Components[GlobalId].paneHoverText
    </div>
    <div class="card-name">
        @Name
    </div>

    @code {

        [Parameter] public string Name { get; set; }
        [Parameter] public int GlobalId { get; set; }
        [Parameter] public bool Disabled { get; set; }
        [Parameter] public string NodeName { get; set; }

        [Parameter] public ComponentInstance IndividualData { get; set; }

        public ComponentCard(int id)
        {
            GlobalId = id;
            Name = ComponentDeclarations.Components[id].name;
        }

        public ComponentCard()
        {
        }

        [Parameter] public EventCallback<MouseEventArgs> handleClick { get; set; }

        // event handling for palette right click menu
        private bool _showPaletteRightClick = false;

        private void ShowPaletteRightClickFunc()
        {
            _showPaletteRightClick = true;
            isPaletteHovered = true; // Set the flag to true when the mouse is over the palette
        }

        private void StartHidingPaletteRightClick()
        {
            isPaletteHovered = false; // Reset the flag when the mouse leaves the menu
            Task.Delay(100).ContinueWith(_ =>
            {
                if (!isCardContainerHovered && !isPaletteHovered) // Only hide if the mouse is not over the card container and not over the menu
                    _showPaletteRightClick = false;
            }); // Delay hiding the menu to allow smooth transition
        }

        private bool isPaletteHovered = false;
        private bool isCardContainerHovered = false;

        // Event handler for mouse entering the card container
        private void HandleMouseEnterCardContainer()
        {
            isCardContainerHovered = true;
        }

        // Event handler for mouse leaving the card container
        private void HandleMouseLeaveCardContainer()
        {
            isCardContainerHovered = false;
            StartHidingPaletteRightClick();
        }

    }

</div>

@code {

    void OpenLink(string url)
    {
        JsRuntime.InvokeVoidAsync("window.open", url, "_blank");
    }

    string GenerateLink(string nodeName)
    {
        Console.WriteLine($"nodeName: {nodeName}");
        switch (nodeName) //no breaks needed as return ends.
        {
            case "arduinoUnoRev3":
                return "https://adarc-help.mech.website/arduino_concept.html#styler-id1.1.1.2.7.7.1";
            case "arduinoMega":
                return "https://adarc-help.mech.website/arduino_concept.html#styler-id1.1.1.2.7.7.1"; 
            case "Uno WIFI Rev2":
                return "https://adarc-help.mech.website/unoWifi_pinout.html#d38361e767";
            case "arcadePushButton":
                return ""; // Add link for Pushbutton here
            case "Switch":
                return ""; // Add link for Switch here
            case "adxl345":
                return "https://adarc-help.mech.website/adxl345_topic.html#d38361e7520";
            case "mpu6050":
                return "https://adarc-help.mech.website/mpu6050_topic.html#d38361e8239";
            case "BNO055":
                return "https://adarc-help.mech.website/bno055_code.html#d38361e8125";
            case "tfLunaLidarI2C":
                return "https://adarc-help.mech.website/tfLuna.html#styler-id1.1.1.2.8.10.9.1";
            case "TF-Luna Lidar - UART":
                return ""; // Add link for TF-Luna Lidar - UART here
            case "Ultrasonic":
                return "https://adarc-help.mech.website/hc_sr04.html#styler-id1.1.1.2.8.10.7.1";
            case "IR Distance":
                return "https://adarc-help.mech.website/remoteControl.html#styler-id1.1.1.2.8.14.10.1";
            case "Alcohol Sensor":
                return "https://adarc-help.mech.website/mq3.html#styler-id1.1.1.2.8.11.7.1";
            case "SGP41":
                return "https://adarc-help.mech.website/sgp41.html#styler-id1.1.1.2.8.11.8.1";
            case "ky018":
                return "https://adarc-help.mech.website/ldr.html#styler-id1.1.1.2.8.12.7.1";
            case "Ambient Light":
                return "https://adarc-help.mech.website/ambientLight.html#styler-id1.1.1.2.8.12.9.1";
            case "Luminosity":
                return "https://adarc-help.mech.website/lightSensors.html#styler-id1.1.1.2.8.12.1";
            case "Alt - Ambient Light":
                return "https://adarc-help.mech.website/ambientLight.html#styler-id1.1.1.2.8.12.9.1";
            case "DHT11 / DHT22":
                return "https://adarc-help.mech.website/dht11.html#styler-id1.1.1.2.8.13.7.1";
            case "SHT31":
                return "https://adarc-help.mech.website/sht31.html#styler-id1.1.1.2.8.13.9.1";
            case "ds18b20":
                return "https://adarc-help.mech.website/ds18b20.html#styler-id1.1.1.2.8.13.8.1";
            case "ky003":
                return "https://adarc-help.mech.website/hallEffect.html#styler-id1.1.1.2.8.14.7.1";
            case "ky024":
                return "https://adarc-help.mech.website/hallEffect.html#styler-id1.1.1.2.8.14.7.1";
            case "max6675":
                return "https://adarc-help.mech.website/ThermoMax6675.html#styler-id1.1.1.2.8.14.9.1";
            case "hcsr501":
                return "https://adarc-help.mech.website/pir.html#styler-id1.1.1.2.8.14.8.1";
            case "ky022":
                return "https://adarc-help.mech.website/remoteControl.html#styler-id1.1.1.2.8.14.10.1";
            case "SD Card Reader":
                return "https://adarc-help.mech.website/SD_CardReader.html#styler-id1.1.1.2.8.14.11.1";
            case "hx711":
                return "https://adarc-help.mech.website/strainGaugeLoadCell.html#styler-id1.1.1.2.8.14.12.1";
            case "led":
                return "https://adarc-help.mech.website/LED.html#styler-id1.1.1.2.8.7.9.1";
            case "7segment":
                return "https://adarc-help.mech.website/OLED.html#styler-id1.1.1.2.8.7.8.1";
            case "Bar":
                return "https://adarc-help.mech.website/ledBar.html#LEDBarGraphModules-4ABFAB6B";
            case "Matrix":
                return "https://adarc-help.mech.website/ledMatrix.html#LEDMatrix-4A2C438B";
            case "rgbLed":
                return "https://adarc-help.mech.website/rgdLed.html#RGBLEDModules-4A304018";
            case "RGB module":
                return "https://adarc-help.mech.website/rgdLed.html#RGBLEDModules-4A304018";
            case "ky008":
                return "https://adarc-help.mech.website/LED.html#styler-id1.1.1.2.8.7.9.1";
            case "LCD2004":
                return "https://adarc-help.mech.website/lcd2004.html#LCD2004Modules-49BD4324";
            case "LCD2004 - I2C":
                return "https://adarc-help.mech.website/lcd2004.html#LCD2004Modules-49BD4324";
            case "LCD1602":
                return "https://adarc-help.mech.website/lcd1602.html#LCDModule-493015CA";
            case "lcd1602I2C":
                return "https://adarc-help.mech.website/lcd1602.html#LCDModule-493015CA";
            case "SH1106 OLED - SPI":
                return "https://adarc-help.mech.website";
            case "SH1106 OLED - I2C":
                return "https://adarc-help.mech.website";
            case "Direct - SG90":
                return "https://adarc-help.mech.website/ServoMotors.html#styler-id1.1.1.2.9.7.1";
            case "Direct - DS-7001HV":
                return "https://adarc-help.mech.website/ServoMotors.html#styler-id1.1.1.2.9.7.1";
            case "Driver - SG90":
                return "https://adarc-help.mech.website/motorDrivers.html#styler-id1.1.1.2.9.12.1";
            case "Driver - DS-7001HV":
                return "https://adarc-help.mech.website/motorDrivers.html#styler-id1.1.1.2.9.12.1";
            case "Direct - Motor":
                return "https://adarc-help.mech.website/motors.html#styler-id1.1.1.2.9.1";
            case "Driver - Motor":
                return "https://adarc-help.mech.website/motorDrivers.html#styler-id1.1.1.2.9.12.1";
            case "esc_pca9685":
                return "https://adarc-help.mech.website/brushlessDcMotor_datasheet.html#styler-id1.1.1.2.9.10.8.1";
            case "28BYJ-48":
                return "https://adarc-help.mech.website/steppers_concept.html#styler-id1.1.1.2.9.9.1";
            case "Nema-17":
                return "https://adarc-help.mech.website/steppers_concept.html#styler-id1.1.1.2.9.9.1";
            case "Speaker":
                return ""; // Add link for Speaker here
            case "ky012":
                return ""; // Add link for Buzzer here
            case "Encoder":
                return ""; // Add link for Encoder here
            case "Voltage regulator":
                return ""; // Add link for Voltage regulator here
            case "Bluetooth Module":
                return "https://adarc-help.mech.website"; // Add link for Bluetooth Module here
            case "resistor":
                return ""; // Add link for resistor here
            case "uln2003":
                return "https://adarc-help.mech.website/steppers_concept.html#styler-id1.1.1.2.9.9.1"; // Add link for stepper driver here
            case "pca9685":
                return "https://adarc-help.mech.website/ServoPCA9685_Task.html#HowToConnectDCMotorToArduino-48F85C402";
            case "l298n":
                return "https://adarc-help.mech.website/L298driver_1.html#styler-id1.1.1.2.9.12.11.1";
            case "servo":
                return "https://adarc-help.mech.website/ServoDirect_Task.html#HowToConnectDCMotorToArduino-48F85C40";
            default:
                return "https://adarc-help.mech.website"; // Default just in case it returns null
        }
    }

}
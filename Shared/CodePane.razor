@using BlazorMonaco
@using BlazorMonaco.Editor
@using BlazorMonaco.Languages


<div class="code-container">


<!-- Create a container for the Monaco Editor -->
<StandaloneCodeEditor Id="monaco-editor" ConstructionOptions="EditorConstructionOptions" CssClass="editor"></StandaloneCodeEditor>

<!-- Create a container for the console output -->
<div id="console-container" style="flex: 1; border: 1px solid #ccc; padding: 10px; background-color: #f4f4f4; overflow-y: scroll; user-select:text; white-space:pre">
        @foreach(string line in text)
        {
            <span class="@(line.Contains("Error during build:")?"error":"auto")">@line</span><hr>
        }
</div>

</div>

@code {

    private StandaloneEditorConstructionOptions EditorConstructionOptions(StandaloneCodeEditor editor)
    {
        return new StandaloneEditorConstructionOptions
            {
                AutomaticLayout = true,
                Language = "cpp",
                Value = "void setup() {\n" +
                    "// put your setup code here, to run once:\n\n" +
                    "}\n\n" +
                    "void loop() {\n" +
                    "// put your main code here, to run repeatedly:\n\n" +
                    "}",
                Minimap = new EditorMinimapOptions() { Enabled = false }
            };
    }


    public CodePane()
    {
        Pages.Index.codePane = this;
    }

    List<string> text = ["Welcome to the App!"];

    int index = 1;

    // Create a function to update the console output
    public void updateConsoleOutput(string newText, bool middleNewLinesMakeHR)
    {
        if (middleNewLinesMakeHR)
        {
            var lines = newText.Split("\n");
            for (int i = 0; i < lines.Count(); i++)
            {
                string line = lines[i];
                if (i != lines.Count() - 1)
                {
                    singleLine(line + "\n");
                }
                else
                {
                    singleLine(line);
                }
            }
        }
        else
        {
            singleLine(newText);    
        }

        StateHasChanged();
    }

    private void singleLine(string line)
    {
        if (this.text.Count == index)
        {
            this.text.Add("");
        }
        this.text[index] += line;
        if (line.EndsWith("\n"))
        {
            index++;
        }

    }

    public void newLineIfNot()
    {
        if (!this.text.Last().EndsWith("\n"))
        {
            this.text[index] += "\n";
            index++;
        }
    }
  
}
